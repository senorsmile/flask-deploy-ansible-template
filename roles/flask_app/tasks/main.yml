---
## what is a fact?
- set_fact:
    app_dir: /home/vagrant/flask_app

#---------------------------------
# install prereqs
#---------------------------------
- name: Apt install deps
  become: True
  apt:
    name: "{{ item }}"
    state:  present
  with_items:
    - python-virtualenv
    - python-dev 
    - libffi-dev 
    - libssl-dev 
    - build-essential
    - supervisor

#---------------------------------
# copy files
#---------------------------------
- name: Create app dir
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /home/vagrant/flask_app/
    - /home/vagrant/flask_app/static/
  notify: Restart flask_app

- name: Create requirements.txt
  copy:
    src: requirements.txt
    dest: /home/vagrant/flask_app/requirements.txt
  notify: Restart flask_app

- name: Create app.py
  copy:
    src: app.py
    dest: /home/vagrant/flask_app/app.py
  notify: Restart flask_app

- name: Create static/index.html
  copy:
    dest: /home/vagrant/flask_app/static/index.html
    content: >
  notify: Restart flask_app

- name: Create run_app.bash
  copy:
    src: run_app.bash
    dest: /home/vagrant/flask_app/run_app.bash
    mode: '0777'
  notify: Restart flask_app

#- name: Create supervisor conf
#  become: True
#  copy: # we should use template instead of copy and content
#    dest: /etc/supervisor/conf.d/flask_app.conf
#    # we can copy things directly using content
#    # templated using jinja
#    content: |
#      [program:flask_app]
#      command = bash run_app.bash
#      directory = {{ app_dir }} 
#      user = vagrant
#  register: supervisor_conf

- name: Create supervisor conf
  become: True
  template:
    src: supervisor_flask_app.conf.j2
    dest: /etc/supervisor/conf.d/flask_app.conf
  register: supervisor_conf

#---------------------------------
# start the app
#---------------------------------

## this is needed to prevent supervisor complaining on first start
## I like no errors in my automation!
- name: preload venv
  shell: |
    ## running the run_app.bash without the 'run' param
    ## just loads the venv
    bash ./run_app.bash
  args:
    chdir: "{{ app_dir }}"
  when: ( supervisor_conf | changed )
  register: preload_venv
  failed_when: False ## pip install always returns 1

## why is this not in handlers?
- name: Reload supervisor if conf changed
  become: True
  shell: |
    supervisorctl reread
    supervisorctl update
  ## what are filters?
  when: ( supervisor_conf | changed )

- name: Start flask_app
  become: True
  supervisorctl:
    name: flask_app
    state: started
